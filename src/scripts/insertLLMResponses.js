const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config();

const userId = '68e85accf7d148a1d1b2f178';

const exampleLLMResponses = [
  `Ol√° Guilherme! üëã Sua an√°lise MBTI est√° pronta. Voc√™ √© do tipo ENFJ (Protagonista). 
  
  Caracter√≠sticas principais:
  - Voc√™ √© naturalmente carism√°tico e emp√°tico
  - Tem facilidade para liderar e inspirar pessoas
  - Valoriza relacionamentos profundos e aut√™nticos
  
  No amor: Voc√™ tende a ser muito rom√¢ntico e atencioso, sempre buscando fazer o parceiro feliz.`,
  
  `üí° Dicas personalizadas para voc√™:
  
  1. Comunica√ß√£o: Seu tipo valoriza conversas profundas. N√£o tenha medo de compartilhar seus sentimentos.
  2. Compatibilidade: Voc√™ combina muito bem com INFP e ISFP - tipos que valorizam autenticidade.
  3. Red Flag: Cuidado com pessoas muito cr√≠ticas ou distantes emocionalmente, isso pode te magoar.`,
  
  `üåü Voc√™ √© compat√≠vel com celebridades como:
  
  üáßüá∑ Brasileiras: Ivete Sangalo (88% compatibilidade)
  üåé Internacionais: Oprah Winfrey (90% compatibilidade)
  
  Ambas compartilham sua energia contagiante e habilidade de conectar com pessoas!`
];

async function insertLLMResponses() {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Conectado ao MongoDB\n');

    const user = await User.findById(userId);
    
    if (!user) {
      console.log('‚ùå Usu√°rio n√£o encontrado:', userId);
      process.exit(1);
    }

    console.log('üë§ Usu√°rio encontrado:', user.name);
    console.log('üìß Email:', user.email);
    console.log('üí≥ Cr√©ditos:', user.credits);
    console.log('üì¶ Plan:', user.plan);

    // Inserir respostas LLM
    user.llmResponses = exampleLLMResponses;
    await user.save();

    console.log('\n‚úÖ Respostas LLM inseridas com sucesso!');
    console.log(`üìù Total de respostas: ${exampleLLMResponses.length}`);
    
    console.log('\nüìã Respostas inseridas:');
    exampleLLMResponses.forEach((response, index) => {
      const preview = response.substring(0, 80).replace(/\n/g, ' ');
      console.log(`   ${index + 1}. ${preview}...`);
    });

    // Verificar o resultado
    const updatedUser = await User.findById(userId).select('llmResponses');
    console.log('\nüîç Verifica√ß√£o - Total no banco:', updatedUser.llmResponses.length);

    mongoose.connection.close();
    process.exit(0);

  } catch (error) {
    console.error('‚ùå Erro:', error);
    process.exit(1);
  }
}

insertLLMResponses();

